{"version":3,"file":"divine-voxel-engine.js","sources":["../src/Core/DivineVoxelEngine.ts"],"sourcesContent":["import type { BaseWorldData } from \"Meta/Global/BaseWorldData.type.js\";\r\n\r\nimport type { DVE, DVEInitData, DVEOptions } from \"Meta/Core/DVE.js\";\r\n\r\nimport { Util } from \"../Global/Util.helper.js\";\r\nimport { BuilderWorkerManager } from \"./Builders/BuilderWorkerManager.js\";\r\nimport { World } from \"./World/World.js\";\r\nimport { RenderManager } from \"./Render/RenderManager.js\";\r\nimport { BuildInitalMeshes } from \"./Functions/BuildInitalMeshes.js\";\r\nimport { MeshManager } from \"./Meshes/MeshManager.js\";\r\n\r\nexport class DivineVoxelEngine implements DVE {\r\n world = new World(this);\r\n\r\n renderManager = new RenderManager();\r\n builderManager = new BuilderWorkerManager(this);\r\n meshManager = new MeshManager(this);\r\n util: Util = new Util();\r\n\r\n constructor() {}\r\n\r\n _handleOptions(data: DVEOptions) {\r\n  if (data.textureOptions) {\r\n   if (data.textureOptions.width && data.textureOptions.height) {\r\n    this.renderManager.textureCreator.defineTextureDimensions(\r\n     data.textureOptions.width,\r\n     data.textureOptions.height\r\n    );\r\n   }\r\n  }\r\n }\r\n\r\n async reStart(data: DVEOptions): Promise<void> {\r\n     this._handleOptions(data);\r\n }\r\n\r\n async $INIT(data: DVEInitData) {\r\n  this._handleOptions(data);\r\n  this.world.createWorldWorker(data.worldWorkerPath);\r\n  this.builderManager.createBuilderWorker(data.builderWorkerPath);\r\n  this.builderManager.createFluidBuilderWorker(data.fluidBuilderWorkerPath);\r\n\r\n  await this.world.getBaseWorldData();\r\n\r\n  window.addEventListener(\"beforeunload\", () => {\r\n   for (const builder of this.builderManager.builders) {\r\n    builder.terminate();\r\n   }\r\n   this.world.worker.terminate();\r\n  });\r\n }\r\n\r\n async $SCENEINIT(data: { scene: BABYLON.Scene }) {\r\n  // data.scene.enableDepthRenderer();\r\n\r\n  await BuildInitalMeshes(this, data.scene);\r\n\r\n  this.world.startWorldGen();\r\n }\r\n}\r\n"],"names":["World","RenderManager","BuilderWorkerManager","MeshManager","Util","BuildInitalMeshes"],"mappings":";;;;;;;;;;;AAMO,MAAM,iBAAiB,CAAC;AAC/B,EAAE,KAAK,GAAG,IAAIA,cAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,EAAE,aAAa,GAAG,IAAIC,8BAAa,EAAE,CAAC;AACtC,EAAE,cAAc,GAAG,IAAIC,4CAAoB,CAAC,IAAI,CAAC,CAAC;AAClD,EAAE,WAAW,GAAG,IAAIC,0BAAW,CAAC,IAAI,CAAC,CAAC;AACtC,EAAE,IAAI,GAAG,IAAIC,mBAAI,EAAE,CAAC;AACpB,EAAE,WAAW,GAAG;AAChB,GAAG;AACH,EAAE,cAAc,CAAC,IAAI,EAAE;AACvB,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;AAC7B,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;AACnE,QAAQ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACzH,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,IAAI,EAAE;AACtB,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC9B,GAAG;AACH,EAAE,MAAM,KAAK,CAAC,IAAI,EAAE;AACpB,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACvD,IAAI,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACpE,IAAI,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;AAC9E,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;AACxC,IAAI,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAM;AAClD,MAAM,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;AAC1D,QAAQ,OAAO,CAAC,SAAS,EAAE,CAAC;AAC5B,OAAO;AACP,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACpC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,UAAU,CAAC,IAAI,EAAE;AACzB,IAAI,MAAMC,sCAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;AAC/B,GAAG;AACH;;;;"}